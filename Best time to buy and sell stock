# Best time to buy and sell stock

class Solution:
  def maxProfit(self, prices: list[int]):
    max_profit = float('-inf')
    for i in range(len(prices)):
      for j in range(i+1, len(prices)):
        profit = prices[j] - prices[i]

        if profit > 0:
          max_profit = max(max_profit, profit)

    return max_profit if max_profit > float('-infinity') else 0

# Time: O(N^2)
# Space: O(1)

# better solution
class Solution:
  def maxProfit(self, prices):

      min_price = float('inf')
      max_profit = 0

      for price in prices:
          if price < min_price:
              min_price = price

          profit = price - min_price

          if profit > max_profit:
              max_profit = profit

      return max_profit

# Time: O(n)
# Space: O(1)
